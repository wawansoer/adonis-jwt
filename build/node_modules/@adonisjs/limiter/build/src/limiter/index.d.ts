import { RateLimiterAbstract } from 'rate-limiter-flexible';
import type { LimiterResponse } from '../contracts';
export declare class Limiter {
    private rateLimiter;
    constructor(rateLimiter: RateLimiterAbstract);
    private timeToSeconds;
    consume(key: string | number): Promise<LimiterResponse>;
    increment(key: string | number): Promise<void>;
    get(key: string | number): Promise<LimiterResponse | null>;
    remaining(key: string | number): Promise<number>;
    isBlocked(key: string | number): Promise<boolean>;
    delete(key: string | number): Promise<boolean>;
    block(key: string | number, duration: string | number): Promise<import("rate-limiter-flexible").RateLimiterRes>;
    set(key: string | number, requests: number, duration: string | number): Promise<import("rate-limiter-flexible").RateLimiterRes>;
}
