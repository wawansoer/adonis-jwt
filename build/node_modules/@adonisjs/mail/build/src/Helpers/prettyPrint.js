"use strict";
/*
 * @adonisjs/mail
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.prettyPrint = void 0;
const nodemailer_1 = __importDefault(require("nodemailer"));
/**
 * Formats recipients for display
 */
function formatRecipients(recipients) {
    return recipients.length <= 3 ? recipients.join(',') : `${recipients.length} recipients`;
}
/**
 * Returns display message for the accepted recipients (if any)
 */
function getAcceptedRecipients(response) {
    if ('accepted' in response) {
        return formatRecipients(response.accepted);
    }
}
/**
 * Returns display message for the accepted recipients (if any)
 */
function getRejectedRecipients(response) {
    if ('rejected' in response) {
        return formatRecipients(response.rejected);
    }
}
/**
 * Returns display message for the accepted recipients (if any)
 */
function getMessageRecipients(message) {
    return formatRecipients((message.to || []).map(({ address }) => address));
}
/**
 * Pretty prints the email event
 */
function prettyPrint(mail) {
    /**
     * Lazy loading pretty printed dependencies
     */
    const { Colors } = require('@poppinss/colors');
    const colors = new Colors();
    /**
     * Begin
     */
    let output = colors.dim(`┌ "${mail.mailer}" `);
    /**
     * Concatenate the mail subject
     */
    output += colors.underline(`Subject: ${mail.message.subject || 'No Subject'} `);
    /**
     * Show views (if used)
     */
    if (mail.views.length) {
        output += colors.dim(` (${mail.views.join(',')})`);
    }
    /**
     * Show from address
     */
    output += `\n${colors.dim('│')}  ${colors.dim('from:')} ${mail.message.from?.address}`;
    /**
     * Show accepted or to recipients
     */
    const acceptedRecipients = getAcceptedRecipients(mail.response);
    if (acceptedRecipients) {
        output += `\n${colors.dim('│')}  ${colors.dim('accepted:')} ${acceptedRecipients}`;
    }
    else {
        output += `\n${colors.dim('│')}  ${colors.dim('to:')} ${getMessageRecipients(mail.message)}`;
    }
    /**
     * Show rejected recipients
     */
    const rejectedRecipients = getRejectedRecipients(mail.response);
    if (rejectedRecipients) {
        output += `\n${colors.dim('│')}  ${colors.red().dim('rejected:')} ${rejectedRecipients}`;
    }
    /**
     * Show total attachments
     */
    const attachments = (mail.message.attachments || []).length;
    output += `\n${colors.dim('│')}  ${colors.dim('attachments:')} ${attachments} attachment(s)`;
    /**
     * Preview url (if any)
     */
    const previewUrl = nodemailer_1.default.getTestMessageUrl(mail.response);
    if (previewUrl) {
        output += `\n${colors.dim('│')}  ${colors.dim('url:')} ${previewUrl}`;
    }
    /**
     * End
     */
    output += `\n${colors.dim('└')}  sent`;
    /**
     * Print it to the console
     */
    console.log(output);
}
exports.prettyPrint = prettyPrint;
